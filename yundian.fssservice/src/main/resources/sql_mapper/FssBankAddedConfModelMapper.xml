<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yundian.fss.dao.FssBankAddedConfModelMapper">
  <resultMap id="BaseResultMap" type="com.yundian.fssapi.domain.FssBankAddedConfModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bank_id" jdbcType="INTEGER" property="bankId" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="have_credit_collect" jdbcType="VARCHAR" property="haveCreditCollect" />
    <result column="credit_collect_price" jdbcType="INTEGER" property="creditCollectPrice" />
    <result column="have_risk_searching" jdbcType="VARCHAR" property="haveRiskSearching" />
    <result column="risk_searching_price" jdbcType="INTEGER" property="riskSearchingPrice" />
    <result column="have_face_matching" jdbcType="VARCHAR" property="haveFaceMatching" />
    <result column="face_matching_price" jdbcType="INTEGER" property="faceMatchingPrice" />
    <result column="have_identity_verification" jdbcType="VARCHAR" property="haveIdentityVerification" />
    <result column="identity_verification_price" jdbcType="INTEGER" property="identityVerificationPrice" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, bank_id, bank_name, have_credit_collect, credit_collect_price, have_risk_searching, 
    risk_searching_price, have_face_matching, face_matching_price, have_identity_verification, 
    identity_verification_price, ctime, mtime, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fss_bank_added_conf
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from fss_bank_added_conf
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByBankId" parameterType="java.lang.Long">
    delete from fss_bank_added_conf
    where bank_id = #{bankId,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.yundian.fssapi.domain.FssBankAddedConfModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fss_bank_added_conf (bank_id, bank_name, have_credit_collect, 
      credit_collect_price, have_risk_searching, 
      risk_searching_price, have_face_matching, face_matching_price, 
      have_identity_verification, identity_verification_price, 
      ctime, remark
      )
    values (#{bankId,jdbcType=INTEGER}, #{bankName,jdbcType=VARCHAR}, #{haveCreditCollect,jdbcType=VARCHAR}, 
      #{creditCollectPrice,jdbcType=INTEGER}, #{haveRiskSearching,jdbcType=VARCHAR}, 
      #{riskSearchingPrice,jdbcType=INTEGER}, #{haveFaceMatching,jdbcType=VARCHAR}, #{faceMatchingPrice,jdbcType=INTEGER}, 
      #{haveIdentityVerification,jdbcType=VARCHAR}, #{identityVerificationPrice,jdbcType=INTEGER}, 
      now(), #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yundian.fssapi.domain.FssBankAddedConfModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fss_bank_added_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="bankName != null and bankName != ''">
        bank_name,
      </if>
      <if test="haveCreditCollect != null and haveCreditCollect != ''">
        have_credit_collect,
      </if>
      <if test="creditCollectPrice != null">
        credit_collect_price,
      </if>
      <if test="haveRiskSearching != null and haveRiskSearching != ''">
        have_risk_searching,
      </if>
      <if test="riskSearchingPrice != null">
        risk_searching_price,
      </if>
      <if test="haveFaceMatching != null and haveFaceMatching != ''">
        have_face_matching,
      </if>
      <if test="faceMatchingPrice != null">
        face_matching_price,
      </if>
      <if test="haveIdentityVerification != null and haveIdentityVerification != ''">
        have_identity_verification,
      </if>
      <if test="identityVerificationPrice != null">
        identity_verification_price,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="mtime != null">
        mtime,
      </if>
      <if test="remark != null and remark != ''">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bankId != null">
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null and bankName != ''">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="haveCreditCollect != null and haveCreditCollect != ''">
        #{haveCreditCollect,jdbcType=VARCHAR},
      </if>
      <if test="creditCollectPrice != null">
        #{creditCollectPrice,jdbcType=INTEGER},
      </if>
      <if test="haveRiskSearching != null and haveRiskSearching != ''">
        #{haveRiskSearching,jdbcType=VARCHAR},
      </if>
      <if test="riskSearchingPrice != null">
        #{riskSearchingPrice,jdbcType=INTEGER},
      </if>
      <if test="haveFaceMatching != null and haveFaceMatching != ''">
        #{haveFaceMatching,jdbcType=VARCHAR},
      </if>
      <if test="faceMatchingPrice != null">
        #{faceMatchingPrice,jdbcType=INTEGER},
      </if>
      <if test="haveIdentityVerification != null and haveIdentityVerification != ''">
        #{haveIdentityVerification,jdbcType=VARCHAR},
      </if>
      <if test="identityVerificationPrice != null">
        #{identityVerificationPrice,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null and remark != ''">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundian.fssapi.domain.FssBankAddedConfModel">
    update fss_bank_added_conf
    <set>
      <if test="bankId != null">
        bank_id = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null and bankName != ''">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="haveCreditCollect != null and haveCreditCollect != ''">
        have_credit_collect = #{haveCreditCollect,jdbcType=VARCHAR},
      </if>
      <if test="creditCollectPrice != null">
        credit_collect_price = #{creditCollectPrice,jdbcType=INTEGER},
      </if>
      <if test="haveRiskSearching != null and haveRiskSearching != ''">
        have_risk_searching = #{haveRiskSearching,jdbcType=VARCHAR},
      </if>
      <if test="riskSearchingPrice != null">
        risk_searching_price = #{riskSearchingPrice,jdbcType=INTEGER},
      </if>
      <if test="haveFaceMatching != null and haveFaceMatching != ''">
        have_face_matching = #{haveFaceMatching,jdbcType=VARCHAR},
      </if>
      <if test="faceMatchingPrice != null">
        face_matching_price = #{faceMatchingPrice,jdbcType=INTEGER},
      </if>
      <if test="haveIdentityVerification != null and haveIdentityVerification != ''">
        have_identity_verification = #{haveIdentityVerification,jdbcType=VARCHAR},
      </if>
      <if test="identityVerificationPrice != null">
        identity_verification_price = #{identityVerificationPrice,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null and remark != ''">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundian.fssapi.domain.FssBankAddedConfModel">
    update fss_bank_added_conf
    set bank_id = #{bankId,jdbcType=INTEGER},
      bank_name = #{bankName,jdbcType=VARCHAR},
      have_credit_collect = #{haveCreditCollect,jdbcType=VARCHAR},
      credit_collect_price = #{creditCollectPrice,jdbcType=INTEGER},
      have_risk_searching = #{haveRiskSearching,jdbcType=VARCHAR},
      risk_searching_price = #{riskSearchingPrice,jdbcType=INTEGER},
      have_face_matching = #{haveFaceMatching,jdbcType=VARCHAR},
      face_matching_price = #{faceMatchingPrice,jdbcType=INTEGER},
      have_identity_verification = #{haveIdentityVerification,jdbcType=VARCHAR},
      identity_verification_price = #{identityVerificationPrice,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <select id="getFssBankAddedConfByBankId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fss_bank_added_conf
    where bank_id = #{bankId,jdbcType=BIGINT}
  </select>
  
</mapper>