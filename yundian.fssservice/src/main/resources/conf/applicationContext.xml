<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
  		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
  		http://www.springframework.org/schema/aop 
  		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  		http://www.springframework.org/schema/task  
		http://www.springframework.org/schema/task/spring-task-3.0.xsd">
   
    <task:annotation-driven proxy-target-class="true"/>
	
	<context:component-scan base-package="com.yundian.fss.*.**"/> 
	
	<context:annotation-config />
	
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:datasource.properties</value>
				<value>classpath*:statics.properties</value>
			</list>
		</property>
	</bean>
  
	
	 <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath*:statics.properties</value>
            </list>
        </property>
    </bean>
    <bean id="preferencesPlaceholderConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>   
    
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="validationQuery" value="select 1 " />
		<property name="defaultAutoCommit" value="true" />
		<property name="logAbandoned" value="false" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="150" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="300000" />
		<property name="minEvictableIdleTimeMillis" value="320000" />
		<property name="initialSize" value="5" />
		<property name="maxIdle" value="10" />
		<property name="minIdle" value="5" />
		<property name="maxActive" value="15" />
		<property name="maxWait" value="3000" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:sql_mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yundian.fss.dao" />
	</bean>
	
	<!-- spring事务处理数据源配置 -->
	<bean id="transactionManager"   class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />  
 
    <import resource="dubbo-provider.xml"/>
    <import resource="biz-manager.xml"/>
     <import resource="dubbo-customer.xml"/>
    
</beans>
